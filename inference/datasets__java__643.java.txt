<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.util.Scanner;

public class Main {

  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    int hp = scanner.nextInt();
    if (hp % 4 == 1) {
      System.out.println("0 A");
    } else if (hp % 4 == 2) {
      System.out.println("1 B");
    } else if (hp % 4 == 3) {
      System.out.println("2 A");
    } else {
      System.out.println("1 A");
    }
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]2[/choice].

The reason is that the given code has only one conditional statement with no loop(s), hence the time complexity is likely to be O(1). But when inspecting the variable hp%4, we are performing a mathematical operation which is O(logn) on average, making the time complexity of the code to be O(2logn) which is almost the same as O(n) when we are counting the operations inside the else if statements.</s>