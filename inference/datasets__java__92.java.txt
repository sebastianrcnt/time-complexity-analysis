<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
class Test {

  static int arr[] = new int[] {1, 20, 6, 4, 5};

  static int getInvCount(int n) {

    int inv_count = 0;

    for (int i = 0; i < n - 1; i++)
      for (int j = i + 1; j < n; j++) if (arr[i] > arr[j]) inv_count++;

    return inv_count;
  }

  public static void main(String[] args) {

    System.out.println("Number of inversions are " + getInvCount(arr.length));
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]4[/choice].

Explanation:
The code uses nested for loops (for and inner for loops) to find the number of inversions between two consecutive elements in the array. The outer loop iterates until the last element in the array. The inner loop compares the current element with all its subsequent elements. Therefore, the time complexity of this algorithm is O(n^2).</s>