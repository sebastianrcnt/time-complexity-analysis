<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.util.*;

public class Main {

  public static void main(String[] args) {
    Scanner s = new Scanner(System.in);
    int n = s.nextInt();
    int m = s.nextInt();
    m = 0;
    long sum = 0;
    int[] expon = new int[n];
    for (int i = 0; i < n; i++) {
      expon[i] = s.nextInt();
      m = Math.max(expon[i], m);
      sum += expon[i];
    }
    HashSet<Integer> levels = new HashSet<>();

    int amount = 0;
    for (int i = 0; i < n; i++) {
      int currentHigh = expon[i];
      for (int j = currentHigh; j >= 1; j--) {
        if (!levels.contains(j)) {
          levels.add(j);
          amount++;
          break;
        }
        if (j == 1) {
          amount++;
        }
      }
    }
    System.out.println((sum - amount) - (m - levels.size()));
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]1[/choice].</s>