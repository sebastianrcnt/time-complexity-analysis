<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
class GFG {

  static int lps(String s) {

    int n = s.length();

    int a[] = new int[n];

    for (int i = n - 1; i >= 0; i--) {

      int back_up = 0;

      for (int j = i; j < n; j++) {

        if (j == i) a[j] = 1;
        else if (s.charAt(i) == s.charAt(j)) {

          int temp = a[j];

          a[j] = back_up + 2;

          back_up = temp;

        } else {

          back_up = a[j];

          a[j] = Math.max(a[j - 1], a[j]);
        }
      }
    }

    return a[n - 1];
  }

  public static void main(String[] args) {

    String str = "GEEKSFORGEEKS";

    System.out.println(lps(str));
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]3[/choice]. This is because the outer for loop runs n times, and the inner for loop runs n times for each iteration of the outer loop, resulting in a total time complexity of O(n^2).</s>