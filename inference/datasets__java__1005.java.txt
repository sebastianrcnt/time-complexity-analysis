<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.util.*;

public class Main {
  static int n = 5;
  static int[] arr = new int[5];

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int arr[] = new int[n];
    for (int i = 0; i < n; i++) {
      arr[i] = sc.nextInt();
    }
    for (int i = 0; i < n; i++) {
      if (arr[i] >= 0) {
        arr[i] = -arr[i] - 1;
      }
    }
    if (n % 2 != 0) {
      int min = 0;
      for (int i = 1; i < n; i++) {
        if (arr[i] < arr[min]) min = i;
      }
      arr[min] = -arr[min] - 1;
    }
    for (int x : arr) {
      System.out.print(x + " ");
    }
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]3[/choice]. This is because the for loop iterates n times and inside the loop the operation is performed which takes constant time. Hence the time complexity of the given code is O(n).</s>