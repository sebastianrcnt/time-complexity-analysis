<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.util.Scanner;

public class Solution {

  public static void main(String[] args) throws Exception {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int k = sc.nextInt();
    String s = sc.next();

    StringBuilder ans = new StringBuilder();
    int count = 0;
    int open = 0;
    for (int i = 0; i < s.length(); i++) {
      if (s.charAt(i) == '(') {
        ans.append("(");
        count++;
        open++;
      } else {
        ans.append(")");
        open--;
      }
      if (count == k / 2) {
        break;
      }
    }

    while (open > 0) {
      ans.append(")");
      open--;
    }
    System.out.println(ans.toString());
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]3[/choice]. The given code has an outer loop running n times and an inner loop running n times. The inner loop runs only until the count becomes k/2 which is also n times on average. Therefore, overall time complexity of the code will be O(n^2).</s>