<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.util.Scanner;

public class Tokitsukaze {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int m = sc.nextInt();
    long k = sc.nextLong();
    double[] p = new double[m];
    for (int i = 0; i < m; i++) {
      p[i] = sc.nextDouble();
    }
    int c = 0;
    int used = 0;
    for (int i = 0; i < m; ) {
      long low = (long) ((Math.floor(p[i] / k) * k) - i) + 1;
      long high = low + k;
      for (int j = i; j < m; j++) {
        if (p[j] >= low && p[i] <= high) {
          i++;
        }
      }
      c++;
    }
    System.out.println(c);
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]4[/choice].</s>