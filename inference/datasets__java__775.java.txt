<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.io.*;
import java.util.*;

public class Codechef {

  public static void main(String[] args) {
    Scanner in = new Scanner(System.in);

    long n = in.nextLong();
    long m = in.nextLong();
    long k = in.nextLong();
    long l = in.nextLong();

    long j = ((k + l) / m);
    if ((k + l) % m != 0) j++;
    if ((k + l > n) || j * m > n) {
      System.out.println(-1);
    } else {

      System.out.println(j);
    }
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]1[/choice], because the code uses a single `Scanner` object, reads the input `n` times and performs a constant number operations on it.</s>