<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
class GFG {

  static int countFriendsPairings(int n) {

    int a = 1, b = 2, c = 0;

    if (n <= 2) {

      return n;
    }

    for (int i = 3; i <= n; i++) {

      c = b + (i - 1) * a;

      a = b;

      b = c;
    }

    return c;
  }

  public static void main(String[] args) {

    int n = 4;

    System.out.println(countFriendsPairings(n));
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]1[/choice]. 
The reasoning for this choice is that while iterating over n from 3 to n, we are performing a constant amount of arithmetic operations per iteration on average, and we are using a constant amount of space to store the values of a and b. Hence, the overall time complexity of the code is O(n log n).</s>