<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Comparator;

public class pr988B {
  public static void main(String[] args) throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    PrintWriter out = new PrintWriter(System.out);

    int n = Integer.parseInt(br.readLine());

    ArrayList<String> a = new ArrayList<>();

    for (int i = 0; i < n; i++) {
      a.add(br.readLine());
    }

    if (solve(n, a)) {
      out.println("YES");
      for (String s : a) {
        out.println(s);
      }
    } else out.println("NO");

    out.flush();
    out.close();
  }

  private static boolean solve(int n, ArrayList<String> a) {
    a.sort(Comparator.comparingInt(String::length));
    for (int i = 0; i < n - 1; i++) {
      if (!a.get(i + 1).contains(a.get(i))) return false;
    }
    return true;
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]1[/choice].</s>