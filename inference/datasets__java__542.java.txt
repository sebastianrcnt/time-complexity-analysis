<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
class FindCommon {

  void findCommon(int ar1[], int ar2[], int ar3[]) {

    int i = 0, j = 0, k = 0;

    while (i < ar1.length && j < ar2.length && k < ar3.length) {

      if (ar1[i] == ar2[j] && ar2[j] == ar3[k]) {

        System.out.print(ar1[i] + " ");
        i++;
        j++;
        k++;
      } else if (ar1[i] < ar2[j]) i++;
      else if (ar2[j] < ar3[k]) j++;
      else k++;
    }
  }

  public static void main(String args[]) {

    FindCommon ob = new FindCommon();

    int ar1[] = {1, 5, 10, 20, 40, 80};

    int ar2[] = {6, 7, 20, 80, 100};

    int ar3[] = {3, 4, 15, 20, 30, 70, 80, 120};

    System.out.print("Common elements are ");

    ob.findCommon(ar1, ar2, ar3);
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]2[/choice].</s>