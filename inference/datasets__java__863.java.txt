<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.util.Scanner;

public class A961_Tetris {

  public static void main(String[] args) {

    Scanner input = new Scanner(System.in);
    int platforms = input.nextInt();
    int in = input.nextInt();
    int[] cols = new int[platforms];
    int[] squares = new int[in];

    for (int i = 0; i < in; i++) {
      squares[i] = input.nextInt();
    }

    boolean hi = false;
    int score = 0;

    for (int i = 0; i < in; i++) {
      cols[squares[i] - 1]++;
      hi = checkscore(cols);
      if (hi == true) {
        hi = false;
        score++;
        for (int j = 0; j < cols.length; j++) {
          cols[j]--;
        }
      }
    }

    System.out.println(score);
  }

  public static boolean checkscore(int[] cols) {
    for (int i = 0; i < cols.length; i++) {
      if (cols[i] == 0) {
        return false;
      }
    }

    return true;
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]4[/choice].

Explanation: The overall time complexity of the code is O(n^2) because there are two nested for loops, one running from 0 to in-1 and the other running from 0 to cols.length-1.</s>