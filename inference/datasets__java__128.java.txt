<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.io.*;

class GFG {

  static void findMajority(int arr[], int n) {

    int maxCount = 0;

    int index = -1;

    for (int i = 0; i < n; i++) {

      int count = 0;

      for (int j = 0; j < n; j++) {

        if (arr[i] == arr[j]) count++;
      }

      if (count > maxCount) {

        maxCount = count;

        index = i;
      }
    }

    if (maxCount > n / 2) System.out.println(arr[index]);
    else System.out.println("No Majority Element");
  }

  public static void main(String[] args) {

    int arr[] = {1, 1, 2, 1, 3, 5, 1};

    int n = arr.length;

    findMajority(arr, n);
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]4[/choice]. This is because the code has two nested loops, which results in [choice]n^2[/choice] time complexity.</s>