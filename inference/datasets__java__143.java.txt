<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.util.*;

class GFG {

  static void findTriplets(int arr[], int n) {

    boolean found = false;

    for (int i = 0; i < n - 1; i++) {

      HashSet<Integer> s = new HashSet<Integer>();

      for (int j = i + 1; j < n; j++) {

        int x = -(arr[i] + arr[j]);

        if (s.contains(x)) {

          System.out.printf("%d %d %d\n", x, arr[i], arr[j]);

          found = true;

        } else {

          s.add(arr[j]);
        }
      }
    }

    if (found == false) {

      System.out.printf(" No Triplet Found\n");
    }
  }

  public static void main(String[] args) {

    int arr[] = {
      0, -1,
      2, -3,
      1
    };

    int n = arr.length;

    findTriplets(arr, n);
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]4[/choice]. This is because the code uses two nested loops that run n times each, resulting in a total time complexity of O(n^2).</s>