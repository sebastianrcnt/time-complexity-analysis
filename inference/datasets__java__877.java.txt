<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.io.*;
import java.util.*;

public class Codechef {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    Set<HashSet> s3 = new HashSet<>();

    for (int j = 0; j < n; j++) {
      String a = sc.next();
      HashSet<Character> t = new HashSet<Character>();
      for (char c : a.toCharArray()) {
        t.add(c);
      }

      s3.add(t);
    }
    System.out.println(s3.size());
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]4[/choice]. The reason for this choice is that the code iterates n times and inside that, it iterates also n times for each iteration of the outer loop. The total number of iterations is n * n = O(n^2).</s>