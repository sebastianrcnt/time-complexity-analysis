<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.util.*;

public class mad {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int cura = 0, curb = 0;
    int ver;
    System.out.println("? 0 0");
    System.out.flush();
    ver = sc.nextInt();
    for (int i = 29; i >= 0; i--) {
      System.out.println("? " + (cura + (1 << i)) + " " + curb);
      System.out.flush();
      int temp1 = sc.nextInt();
      System.out.println("? " + cura + " " + (curb + (1 << i)));
      System.out.flush();
      int temp2 = sc.nextInt();
      if (temp1 != temp2) {
        if (temp2 == 1) {
          cura += (1 << i);
          curb += (1 << i);
        }
      } else {
        if (ver == 1) cura += (1 << i);
        if (ver == -1) curb += (1 << i);

        ver = temp1;
      }
    }
    System.out.println("! " + cura + " " + curb);
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]2[/choice]. This is because the given code contains a loop that runs `n` times, where `n` is the number of bits `i` takes in the input `ver`. Hence, the time complexity of the given code is O(n).</s>