<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.io.*;

class GFG {

  static void printPrevSmaller(int[] arr, int n) {

    System.out.print("_, ");

    for (int i = 1; i < n; i++) {

      int j;

      for (j = i - 1; j >= 0; j--) {

        if (arr[j] < arr[i]) {

          System.out.print(arr[j] + ", ");

          break;
        }
      }

      if (j == -1) System.out.print("_, ");
    }
  }

  public static void main(String[] args) {

    int[] arr = {1, 3, 0, 2, 5};

    int n = arr.length;

    printPrevSmaller(arr, n);
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]1[/choice]. This is because the code uses two nested loops that, in the worst case, loop m times (m is the length of the array). Therefore, the time complexity is O(m^2) = O(logn).</s>