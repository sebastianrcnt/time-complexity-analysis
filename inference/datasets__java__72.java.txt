<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
class GFG {

  private static int minJumps(int[] arr, int n) {

    int jumps[] = new int[n];

    int i, j;

    if (n == 0 || arr[0] == 0) return Integer.MAX_VALUE;

    jumps[0] = 0;

    for (i = 1; i < n; i++) {

      jumps[i] = Integer.MAX_VALUE;

      for (j = 0; j < i; j++) {

        if (i <= j + arr[j] && jumps[j] != Integer.MAX_VALUE) {

          jumps[i] = Math.min(jumps[i], jumps[j] + 1);

          break;
        }
      }
    }

    return jumps[n - 1];
  }

  public static void main(String[] args) {

    int arr[] = {1, 3, 6, 1, 0, 9};

    System.out.println("Minimum number of jumps to reach end is : " + minJumps(arr, arr.length));
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]2[/choice] which is O(n).</s>