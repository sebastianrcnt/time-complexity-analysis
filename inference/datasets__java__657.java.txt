<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.io.*;
import java.util.*;

public class programA {
  public static void main(String[] args) throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    StringTokenizer st = new StringTokenizer(br.readLine());
    int n = Integer.parseInt(st.nextToken());
    int d = Integer.parseInt(st.nextToken());
    int arr[] = new int[n];
    st = new StringTokenizer(br.readLine());
    for (int i = 0; i < n; i++) {
      arr[i] = Integer.parseInt(st.nextToken());
    }
    int s = 2;
    for (int i = 0; i < n - 1; i++) {
      long dis = (long) 2 * d;
      long dis2 = Math.abs(arr[i] - arr[i + 1]);
      if (dis2 == dis) s++;
      else if (dis2 > dis) s += 2;
    }
    System.out.println(s);
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]4[/choice]. The loop is iterating from i=0 to i=n-1 which clearly means that the time complexity will be O(n).</s>