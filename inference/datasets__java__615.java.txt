<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.io.*;
import java.util.*;

public class Main {
  public static void main(String[] YAHIA_MOSTAFA) {
    Scanner sc = new Scanner(System.in);
    long n = sc.nextLong(), x = sc.nextLong(), y = sc.nextLong();
    long xb, xw, yb, yw;
    xw = x - 1;
    yw = y - 1;
    xb = n - x;
    yb = n - y;
    if (x == n && y == n) {
      System.out.println("Black");
      return;
    }
    long c1 = 0, c2 = 0;
    long f = Math.max(xb, yb);
    long h = Math.max(xw, yw);

    if (h <= f) System.out.println("White");
    else System.out.println("Black");
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]4[/choice]. This is because the code involves two nested loops (one with n iteration and the other with nlogn iteration), resulting in a total time complexity of O(n^2).</s>