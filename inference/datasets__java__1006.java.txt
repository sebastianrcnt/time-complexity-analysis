<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.util.*;

public class MyClass {
  public static void main(String args[]) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int[] a = new int[n];
    int k = 0;
    int m = 0;
    for (int i = 0; i < n; i++) {
      a[i] = sc.nextInt();
      if (a[i] >= 0) {
        a[i] = -a[i] - 1;
      }
      if (a[i] < m) {
        m = a[i];
        k = i;
      }
    }
    if (n % 2 == 1) {
      a[k] = -a[k] - 1;
    }
    for (int i = 0; i < n; i++) {
      System.out.print(a[i] + " ");
    }
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]2[/choice]. This is in the worst case scenario, but it's possible that the code runs in a best case scenario of O(n).</s>