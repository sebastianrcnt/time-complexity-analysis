<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
class SubarraySum {

  int subArraySum(int arr[], int n, int sum) {

    int curr_sum, i, j;

    for (i = 0; i < n; i++) {

      curr_sum = arr[i];

      for (j = i + 1; j <= n; j++) {

        if (curr_sum == sum) {

          int p = j - 1;

          System.out.println("Sum found between indexes " + i + " and " + p);

          return 1;
        }

        if (curr_sum > sum || j == n) break;

        curr_sum = curr_sum + arr[j];
      }
    }

    System.out.println("No subarray found");

    return 0;
  }

  public static void main(String[] args) {

    SubarraySum arraysum = new SubarraySum();

    int arr[] = {15, 2, 4, 8, 9, 5, 10, 23};

    int n = arr.length;

    int sum = 23;

    arraysum.subArraySum(arr, n, sum);
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]4[/choice]. This is because the code has nested loops that iterate n times each, resulting in a total time complexity of O(n^2).</s>