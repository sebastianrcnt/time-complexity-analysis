<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
public class Main {

  public static void rearrange(int arr[], int n) {

    int max_ele = arr[n - 1];

    int min_ele = arr[0];

    for (int i = 0; i < n; i++) {

      if (i % 2 == 0) {

        arr[i] = max_ele;

        max_ele -= 1;

      } else {

        arr[i] = min_ele;

        min_ele += 1;
      }
    }
  }

  public static void main(String args[]) {

    int arr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9};

    int n = arr.length;

    System.out.println("Original Array");

    for (int i = 0; i < n; i++) System.out.print(arr[i] + " ");

    rearrange(arr, n);

    System.out.print("\nModified Array\n");

    for (int i = 0; i < n; i++) System.out.print(arr[i] + " ");
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]4[/choice]. This is because the code iterates through the entire array n times, and within each iteration there are n operations to perform. Therefore, the overall time complexity of the code is O(n^2).</s>