<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
class GFG {

  public static int findFrequency(int arr[], int n, int left, int right, int element) {

    int count = 0;

    for (int i = left - 1; i < right; ++i) if (arr[i] == element) ++count;

    return count;
  }

  public static void main(String[] args) {

    int arr[] = {2, 8, 6, 9, 8, 6, 8, 2, 11};

    int n = arr.length;

    System.out.println("Frequency of 2 from 1 to 6 = " + findFrequency(arr, n, 1, 6, 2));

    System.out.println("Frequency of 8 from 4 to 9 = " + findFrequency(arr, n, 4, 9, 8));
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]2[/choice] (O(n)). The function 'findFrequency' iterates n times in the worst case, as it is traversing from left to right and then again from left to right.</s>