<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.io.*;

class GFG {

  static int findMaxSum(int[] arr, int n) {

    int res = Integer.MIN_VALUE;

    for (int i = 0; i < n; i++) {

      int prefix_sum = arr[i];

      for (int j = 0; j < i; j++) prefix_sum += arr[j];

      int suffix_sum = arr[i];

      for (int j = n - 1; j > i; j--) suffix_sum += arr[j];

      if (prefix_sum == suffix_sum) res = Math.max(res, prefix_sum);
    }

    return res;
  }

  public static void main(String[] args) {

    int arr[] = {-2, 5, 3, 1, 2, 6, -4, 2};

    int n = arr.length;

    System.out.println(findMaxSum(arr, n));
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]2[/choice]. The reason is that the code contains a single loop (for loop) that runs n times (in the worst case). Therefore, the time complexity of the code is O(n).</s>