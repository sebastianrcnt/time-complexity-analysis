<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.io.*;

class GFG {

  static void printTwoElements(int arr[], int size) {

    int i;

    System.out.print("The repeating element is ");

    for (i = 0; i < size; i++) {

      int abs_val = Math.abs(arr[i]);

      if (arr[abs_val - 1] > 0) arr[abs_val - 1] = -arr[abs_val - 1];
      else System.out.println(abs_val);
    }

    System.out.print("And the missing element is ");

    for (i = 0; i < size; i++) {

      if (arr[i] > 0) System.out.println(i + 1);
    }
  }

  public static void main(String[] args) {

    int arr[] = {7, 3, 4, 5, 5, 6, 2};

    int n = arr.length;

    printTwoElements(arr, n);
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]4[/choice]. The reason behind this is that the nested loops iterate through all the elements of the array, and the inner loop again iterates through all the elements to find the missing element. Therefore, the time complexity is O(n^2).</s>