<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    while (sc.hasNext()) {
      int n = sc.nextInt();
      String s = sc.next();
      int sum = 0;
      for (int i = 0; i < s.length(); i++) {
        if (s.charAt(i) == '+') {
          sum++;
        }
        if (s.charAt(i) == '-' && sum != 0) {
          sum--;
        }
      }
      System.out.println(sum);
    }
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]4[/choice]. 


The while loop runs n times, where n is the total number of input elements. The for loop runs n times within the while loop as well. Therefore, the total number of iterations is 2n. In the worst case, the inner loop runs n-1 times within the while loop, which gives us a total of 2n - 1 iterations. Assuming each iteration takes constant time, the time complexity of the given code would be O(2n - 1) which simplifies to O(n).</s>