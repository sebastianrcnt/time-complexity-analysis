<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
class GFG {

  public static int sumOfSubstrings(String num) {

    int n = num.length();

    int sumofdigit[] = new int[n];

    sumofdigit[0] = num.charAt(0) - '0';

    int res = sumofdigit[0];

    for (int i = 1; i < n; i++) {

      int numi = num.charAt(i) - '0';

      sumofdigit[i] = (i + 1) * numi + 10 * sumofdigit[i - 1];

      res += sumofdigit[i];
    }

    return res;
  }

  public static void main(String[] args) {

    String num = "1234";

    System.out.println(sumOfSubstrings(num));
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]2[/choice]. That is the function iterates 'n' times.

Explanation:
The given code iterates 'n' times in order to sum up digits of the given string 'num'. 

For instance:
When 'num' is '123', the loop runs 3 times
When 'num' is '12345', the loop runs 5 times
and so on.</s>