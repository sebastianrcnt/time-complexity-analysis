<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.util.Arrays;
import java.util.Scanner;

public class Main {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);

    int n = sc.nextInt();
    int[] a = new int[n];
    for (int i = 0; i < a.length; i++) {
      a[i] = sc.nextInt();
    }
    System.out.println(solve(a));

    sc.close();
  }

  static String solve(int[] a) {
    if (a.length == 1 || (a.length == 2 && a[0] == a[1])) {
      return "-1";
    }

    int sum = Arrays.stream(a).sum();
    for (int i = 0; ; i++) {
      if (a[i] * 2 != sum) {
        return String.format("1\n%d", i + 1);
      }
    }
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]3[/choice]. This is because the given code has a for loop that iterates from 0 to the length of the array `a`, Therefore, the time complexity of this code is O(n), where n is the length of the array `a`.</s>