<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.io.*;

class GFG {

  static int maxLoot(int hval[], int n) {

    if (n == 0) return 0;

    int value1 = hval[0];

    if (n == 1) return value1;

    int value2 = Math.max(hval[0], hval[1]);

    if (n == 2) return value2;

    int max_val = 0;

    for (int i = 2; i < n; i++) {

      max_val = Math.max(hval[i] + value1, value2);

      value1 = value2;

      value2 = max_val;
    }

    return max_val;
  }

  public static void main(String[] args) {

    int hval[] = {6, 7, 1, 3, 8, 2, 4};

    int n = hval.length;

    System.out.println("Maximum loot value : " + maxLoot(hval, n));
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]2[/choice]. The function calls itself recursively for each iteration of the for loop, hence the time taken by the algorithm increases linearly with the number of iterations.</s>