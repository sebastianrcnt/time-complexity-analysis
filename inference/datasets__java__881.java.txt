<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.util.*;

public class Practice {

  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    sc.nextLine();
    String s = sc.nextLine();

    char c[] = s.toCharArray();
    ArrayList a = new ArrayList();

    for (int i = 0; i < c.length; i++) {

      a.add(c[i]);
    }

    int x = Collections.frequency(a, '0');
    int y = Collections.frequency(a, '1');

    if (y == 0 || y == 1) {
      System.out.println(s);
    } else {
      if (y >= 2) {
        String s1 = "1";
        for (int i = 0; i < x; i++) {
          s1 = s1 + "0";
        }
        System.out.println(s1);
      }
    }
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]2[/choice]. This is because the given code has one loop (for) that iterates n times and performs constant time operations inside the loop. Hence, the time complexity of the given code is O(n).</s>