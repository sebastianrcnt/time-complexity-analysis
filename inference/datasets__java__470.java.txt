<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
class GFG {

  static int maxProductSubset(int a[], int n) {

    if (n == 1) {

      return a[0];
    }

    int max_neg = Integer.MIN_VALUE;

    int count_neg = 0, count_zero = 0;

    int prod = 1;

    for (int i = 0; i < n; i++) {

      if (a[i] == 0) {

        count_zero++;

        continue;
      }

      if (a[i] < 0) {

        count_neg++;

        max_neg = Math.max(max_neg, a[i]);
      }

      prod = prod * a[i];
    }

    if (count_zero == n) {

      return 0;
    }

    if (count_neg % 2 == 1) {

      if (count_neg == 1 && count_zero > 0 && count_zero + count_neg == n) {

        return 0;
      }

      prod = prod / max_neg;
    }

    return prod;
  }

  public static void main(String[] args) {

    int a[] = {-1, -1, -2, 4, 3};

    int n = a.length;

    System.out.println(maxProductSubset(a, n));
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]1[/choice].</s>