<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.io.*;
import java.util.*;

public class SonyaExhibition {
  static BufferedReader br;
  static StringTokenizer tokenizer;

  public static void main(String[] args) throws Exception {
    br = new BufferedReader(new InputStreamReader(System.in));
    int n = nextInt();
    int[] arr = {0, 1};
    for (int i = 0; i < n; i++) {
      System.out.print(arr[i % 2]);
    }
    System.out.println();
  }

  public static String next() throws IOException {
    while (tokenizer == null || !tokenizer.hasMoreTokens()) {
      String line = br.readLine();
      if (line == null) throw new IOException();
      tokenizer = new StringTokenizer(line);
    }
    return tokenizer.nextToken();
  }

  public static int nextInt() throws IOException {
    return Integer.parseInt(next());
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]1[/choice]. Which option corresponds to O(logn)?</s>