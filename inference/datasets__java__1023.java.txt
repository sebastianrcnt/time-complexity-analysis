<s> 
Analyize the time complexity of the given code. Include your choice in the [choice][/choice] tag, and only include the number of the option. (e.g. [choice]1[/choice])


Given Code:
import java.io.*;
import java.math.*;
import java.util.*;

public class Solution {
  public static void main(String[] args) throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    int t = Integer.parseInt(br.readLine());
    StringTokenizer st;
    for (int z = 0; z < t; z++) {
      st = new StringTokenizer(br.readLine());
      int n = Integer.parseInt(st.nextToken());
      st = new StringTokenizer(br.readLine());
      int min = 1;
      int max = 1;
      for (int i = 0; i < n; i++) {
        int k = Integer.parseInt(st.nextToken());
        if (max < k) {
          min = max;
          max = k;
        } else if (min < k) {
          min = k;
        }
      }
      int res = Math.min(n - 2, min - 1);
      System.out.println(res);
    }
  }
}


Options:
    0. O(1)
    1. O(logn)
    2. O(n)
    3. O(nlogn)
    4. O(n^2)

Among the Options above, the time complexity of the given code is [choice]2[/choice]. It has the time complexity of O(n).</s>